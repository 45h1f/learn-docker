version: '3.8'

services:
  # Web Application
  web:
    build: ./webapp
    container_name: webapp-web
    ports:
      - "8080:5000"
    environment:
      - FLASK_ENV=development
      - APP_VERSION=1.0.0
      - DB_HOST=database
      - DB_NAME=webapp
      - DB_USER=admin
      - DB_PASSWORD=secret
      - REDIS_HOST=cache
    depends_on:
      - database
      - cache
    volumes:
      - ./webapp:/app  # Development volume mount
    networks:
      - webapp-network
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.webapp.rule=Host(`localhost`)"

  # PostgreSQL Database
  database:
    image: postgres:13-alpine
    container_name: webapp-db
    environment:
      - POSTGRES_DB=webapp
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=secret
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - webapp-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d webapp"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Cache
  cache:
    image: redis:7-alpine
    container_name: webapp-cache
    command: redis-server --appendonly yes
    volumes:
      - cache_data:/data
    networks:
      - webapp-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: webapp-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - web
    networks:
      - webapp-network
    restart: unless-stopped

  # Database Admin (pgAdmin)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: webapp-pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@example.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    ports:
      - "8081:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - database
    networks:
      - webapp-network
    restart: unless-stopped

  # Redis Admin (Redis Commander)
  redis-admin:
    image: rediscommander/redis-commander:latest
    container_name: webapp-redis-admin
    environment:
      - REDIS_HOSTS=local:cache:6379
    ports:
      - "8082:8081"
    depends_on:
      - cache
    networks:
      - webapp-network
    restart: unless-stopped

# Networks
networks:
  webapp-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

# Volumes
volumes:
  db_data:
    driver: local
  cache_data:
    driver: local
  pgadmin_data:
    driver: local